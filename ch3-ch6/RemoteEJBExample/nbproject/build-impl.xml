<?xml version="1.0" encoding="UTF-8"?>
<!--
*** GENERATED FROM project.xml - DO NOT EDIT  ***
***         EDIT ../build.xml INSTEAD         ***

For the purpose of easier reading the script
is divided into following sections:

  - initialization
  - compilation
  - dist
  - execution
  - debugging
  - javadoc
  - cleanup

        -->
<project xmlns:ejbjarproject1="http://www.netbeans.org/ns/j2ee-ejbjarproject/1" xmlns:ejbjarproject2="http://www.netbeans.org/ns/j2ee-ejbjarproject/2" xmlns:ejbjarproject3="http://www.netbeans.org/ns/j2ee-ejbjarproject/3" basedir=".." default="default" name="RemoteEJBExample-impl">
    <import file="ant-deploy.xml"/>
    <target depends="dist,javadoc" description="Build whole project." name="default"/>
    <!-- 
                INITIALIZATION SECTION 
            -->
    <target name="-pre-init">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="-pre-init" name="-init-private">
        <property file="nbproject/private/private.properties"/>
    </target>
    <target depends="-pre-init,-init-private" name="-init-userdir">
        <property location="${netbeans.user}/build.properties" name="user.properties.file"/>
    </target>
    <target depends="-pre-init,-init-private,-init-userdir" name="-init-user">
        <property file="${user.properties.file}"/>
        <!-- The two properties below are usually overridden -->
        <!-- by the active platform. Just a fallback. -->
        <property name="default.javac.source" value="1.4"/>
        <property name="default.javac.target" value="1.4"/>
    </target>
    <target depends="-pre-init,-init-private,-init-userdir,-init-user" name="-init-project">
        <property file="nbproject/project.properties"/>
    </target>
    <target depends="-pre-init,-init-private,-init-userdir,-init-user,-init-project,-init-macrodef-property" name="-do-init">
        <!-- Ensure configuration directory exists. -->
        <mkdir dir="${meta.inf}"/>
        <property name="runmain.jvmargs" value=""/>
        <condition property="have.tests">
            <or>
                <available file="${test.src.dir}"/>
            </or>
        </condition>
        <condition property="have.sources">
            <or>
                <available file="${src.dir}"/>
            </or>
        </condition>
        <condition property="netbeans.home+have.tests">
            <and>
                <isset property="netbeans.home"/>
                <isset property="have.tests"/>
            </and>
        </condition>
        <condition property="no.javadoc.preview">
            <isfalse value="${javadoc.preview}"/>
        </condition>
        <available file="${meta.inf}/MANIFEST.MF" property="has.custom.manifest"/>
        <condition property="classes.dir" value="${build.ear.classes.dir}">
            <isset property="dist.ear.dir"/>
        </condition>
        <property name="classes.dir" value="${build.classes.dir}"/>
        <condition property="no.deps">
            <and>
                <istrue value="${no.dependencies}"/>
            </and>
        </condition>
        <condition property="no.dist.ear.dir">
            <not>
                <isset property="dist.ear.dir"/>
            </not>
        </condition>
        <property name="source.encoding" value="${file.encoding}"/>
        <condition property="javadoc.encoding.used" value="${javadoc.encoding}">
            <and>
                <isset property="javadoc.encoding"/>
                <not>
                    <equals arg1="${javadoc.encoding}" arg2=""/>
                </not>
            </and>
        </condition>
        <property name="javadoc.encoding.used" value="${source.encoding}"/>
        <condition else="" property="javac.compilerargs.jaxws" value="-Djava.endorsed.dirs='${jaxws.endorsed.dir}'">
            <and>
                <isset property="jaxws.endorsed.dir"/>
                <available file="nbproject/jaxws-build.xml"/>
            </and>
        </condition>
    </target>
    <target name="-post-init">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="-pre-init,-init-private,-init-userdir,-init-user,-init-project,-do-init" name="-init-check">
        <fail unless="src.dir">Must set src.dir</fail>
        <fail unless="test.src.dir">Must set test.src.dir</fail>
        <fail unless="build.dir">Must set build.dir</fail>
        <fail unless="build.generated.dir">Must set build.generated.dir</fail>
        <fail unless="dist.dir">Must set dist.dir</fail>
        <fail unless="build.classes.dir">Must set build.classes.dir</fail>
        <fail unless="dist.javadoc.dir">Must set dist.javadoc.dir</fail>
        <fail unless="build.classes.excludes">Must set build.classes.excludes</fail>
        <fail unless="dist.jar">Must set dist.jar</fail>
    </target>
    <target name="-init-macrodef-property">
        <macrodef name="property" uri="http://www.netbeans.org/ns/j2ee-ejbjarproject/1">
            <attribute name="name"/>
            <attribute name="value"/>
            <sequential>
                <property name="@{name}" value="${@{value}}"/>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-javac">
        <macrodef name="javac" uri="http://www.netbeans.org/ns/j2ee-ejbjarproject/2">
            <attribute default="${src.dir}" name="srcdir"/>
            <attribute default="${build.classes.dir}" name="destdir"/>
            <attribute default="${javac.classpath}:${j2ee.platform.classpath}" name="classpath"/>
            <attribute default="${javac.debug}" name="debug"/>
            <element name="customize" optional="true"/>
            <sequential>
                <property name="javac.compilerargs" value=""/>
                <javac debug="@{debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" encoding="${source.encoding}" includeantruntime="false" source="${javac.source}" srcdir="@{srcdir}" target="${javac.target}">
                    <classpath>
                        <path path="@{classpath}"/>
                    </classpath>
                    <compilerarg line="${javac.compilerargs} ${javac.compilerargs.jaxws}"/>
                    <customize/>
                </javac>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-junit">
        <macrodef name="junit" uri="http://www.netbeans.org/ns/j2ee-ejbjarproject/2">
            <attribute default="**/*Test.java" name="includes"/>
            <sequential>
                <junit dir="${basedir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" showoutput="true">
                    <batchtest todir="${build.test.results.dir}">
                        <fileset dir="${test.src.dir}" includes="@{includes}"/>
                    </batchtest>
                    <classpath>
                        <path path="${run.test.classpath}"/>
                        <path path="${j2ee.platform.classpath}"/>
                    </classpath>
                    <syspropertyset>
                        <propertyref prefix="test-sys-prop."/>
                        <mapper from="test-sys-prop.*" to="*" type="glob"/>
                    </syspropertyset>
                    <formatter type="brief" usefile="false"/>
                    <formatter type="xml"/>
                </junit>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-java">
        <macrodef name="java" uri="http://www.netbeans.org/ns/j2ee-ejbjarproject/3">
            <attribute default="${main.class}" name="classname"/>
            <element name="customize" optional="true"/>
            <sequential>
                <java classname="@{classname}" fork="true">
                    <jvmarg line="${runmain.jvmargs}"/>
                    <classpath>
                        <path path="${build.classes.dir}:${javac.classpath}:${j2ee.platform.classpath}"/>
                    </classpath>
                    <syspropertyset>
                        <propertyref prefix="run-sys-prop."/>
                        <mapper from="run-sys-prop.*" to="*" type="glob"/>
                    </syspropertyset>
                    <customize/>
                </java>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-nbjpda">
        <macrodef name="nbjpdastart" uri="http://www.netbeans.org/ns/j2ee-ejbjarproject/1">
            <attribute default="${main.class}" name="name"/>
            <attribute default="${debug.classpath}" name="classpath"/>
            <sequential>
                <nbjpdastart addressproperty="jpda.address" name="@{name}" transport="dt_socket">
                    <classpath>
                        <path path="@{classpath}"/>
                    </classpath>
                </nbjpdastart>
            </sequential>
        </macrodef>
        <macrodef name="nbjpdareload" uri="http://www.netbeans.org/ns/j2ee-ejbjarproject/1">
            <attribute default="${build.classes.dir}" name="dir"/>
            <sequential>
                <nbjpdareload>
                    <fileset dir="@{dir}" includes="${fix.includes}*.class"/>
                </nbjpdareload>
            </sequential>
        </macrodef>
        <macrodef name="nbjpdaappreloaded" uri="http://www.netbeans.org/ns/web-project/1">
            <sequential>
                <nbjpdaappreloaded/>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-debug-args">
        <property name="version-output" value="java version &quot;${ant.java.version}"/>
        <condition property="have-jdk-older-than-1.4">
            <or>
                <contains string="${version-output}" substring="java version &quot;1.0"/>
                <contains string="${version-output}" substring="java version &quot;1.1"/>
                <contains string="${version-output}" substring="java version &quot;1.2"/>
                <contains string="${version-output}" substring="java version &quot;1.3"/>
            </or>
        </condition>
        <condition else="-Xdebug" property="debug-args-line" value="-Xdebug -Xnoagent -Djava.compiler=none">
            <istrue value="${have-jdk-older-than-1.4}"/>
        </condition>
    </target>
    <target depends="-init-debug-args" name="-init-macrodef-debug">
        <macrodef name="debug" uri="http://www.netbeans.org/ns/j2ee-ejbjarproject/1">
            <attribute default="${main.class}" name="classname"/>
            <attribute default="${debug.classpath}" name="classpath"/>
            <attribute default="${application.args}" name="args"/>
            <element name="customize" optional="true"/>
            <sequential>
                <java classname="@{classname}" fork="true">
                    <jvmarg line="${debug-args-line}"/>
                    <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
                    <classpath>
                        <path path="@{classpath}"/>
                    </classpath>
                    <arg line="@{args}"/>
                    <customize/>
                </java>
            </sequential>
        </macrodef>
    </target>
    <target depends="-pre-init,-init-private,-init-userdir,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-junit,-init-macrodef-java,-init-macrodef-nbjpda,-init-macrodef-debug" name="init"/>
    <!--
                COMPILATION SECTION
            -->
    <target depends="init" if="no.dist.ear.dir" name="-deps-module-jar" unless="no.deps">
        <ant antfile="${project.ApplicationService}/build.xml" inheritall="false" target="jar"/>
        <ant antfile="${project.TransferObject}/build.xml" inheritall="false" target="jar"/>
    </target>
    <target depends="init" if="dist.ear.dir" name="-deps-ear-jar" unless="no.deps">
        <ant antfile="${project.ApplicationService}/build.xml" inheritall="false" target="jar"/>
        <ant antfile="${project.TransferObject}/build.xml" inheritall="false" target="jar"/>
    </target>
    <target depends="init, -deps-module-jar, -deps-ear-jar" name="deps-jar"/>
    <target depends="init,deps-jar" name="-pre-pre-compile">
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.ear.classes.dir}"/>
    </target>
    <target name="-pre-compile">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="compile" name="library-inclusion-in-archive">
        <copy file="${libs.spring-framework-2.5.classpath.libfile.25}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.24}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.23}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.22}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.21}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.20}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.19}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.18}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.17}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.16}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.15}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.14}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.13}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.12}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.11}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.10}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.9}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.8}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.7}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.6}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.5}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.4}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.3}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.2}" todir="${build.classes.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.1}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.xwork-2.1.1.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.ognl-2.6.11.jar}" todir="${build.classes.dir}"/>
        <copy file="${reference.TransferObject.jar}" todir="${build.classes.dir}"/>
        <copy file="${reference.ApplicationService.jar}" todir="${build.classes.dir}"/>
        <copy file="${file.reference.commons-lang.jar}" todir="${build.classes.dir}"/>
    </target>
    <target depends="compile" name="library-inclusion-in-manifest">
        <basename file="${libs.spring-framework-2.5.classpath.libfile.25}" property="included.lib.libs.spring-framework-2.5.classpath.25"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.24}" property="included.lib.libs.spring-framework-2.5.classpath.24"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.23}" property="included.lib.libs.spring-framework-2.5.classpath.23"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.22}" property="included.lib.libs.spring-framework-2.5.classpath.22"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.21}" property="included.lib.libs.spring-framework-2.5.classpath.21"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.20}" property="included.lib.libs.spring-framework-2.5.classpath.20"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.19}" property="included.lib.libs.spring-framework-2.5.classpath.19"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.18}" property="included.lib.libs.spring-framework-2.5.classpath.18"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.17}" property="included.lib.libs.spring-framework-2.5.classpath.17"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.16}" property="included.lib.libs.spring-framework-2.5.classpath.16"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.15}" property="included.lib.libs.spring-framework-2.5.classpath.15"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.14}" property="included.lib.libs.spring-framework-2.5.classpath.14"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.13}" property="included.lib.libs.spring-framework-2.5.classpath.13"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.12}" property="included.lib.libs.spring-framework-2.5.classpath.12"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.11}" property="included.lib.libs.spring-framework-2.5.classpath.11"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.10}" property="included.lib.libs.spring-framework-2.5.classpath.10"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.9}" property="included.lib.libs.spring-framework-2.5.classpath.9"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.8}" property="included.lib.libs.spring-framework-2.5.classpath.8"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.7}" property="included.lib.libs.spring-framework-2.5.classpath.7"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.6}" property="included.lib.libs.spring-framework-2.5.classpath.6"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.5}" property="included.lib.libs.spring-framework-2.5.classpath.5"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.4}" property="included.lib.libs.spring-framework-2.5.classpath.4"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.3}" property="included.lib.libs.spring-framework-2.5.classpath.3"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.2}" property="included.lib.libs.spring-framework-2.5.classpath.2"/>
        <basename file="${libs.spring-framework-2.5.classpath.libfile.1}" property="included.lib.libs.spring-framework-2.5.classpath.1"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.25}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.24}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.23}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.22}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.21}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.20}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.19}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.18}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.17}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.16}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.15}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.14}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.13}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.12}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.11}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.10}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.9}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.8}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.7}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.6}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.5}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.4}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.3}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.2}" todir="${dist.ear.dir}"/>
        <copy file="${libs.spring-framework-2.5.classpath.libfile.1}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.xwork-2.1.1.jar}" property="included.lib.file.reference.xwork-2.1.1.jar"/>
        <copy file="${file.reference.xwork-2.1.1.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.ognl-2.6.11.jar}" property="included.lib.file.reference.ognl-2.6.11.jar"/>
        <copy file="${file.reference.ognl-2.6.11.jar}" todir="${dist.ear.dir}"/>
        <basename file="${reference.TransferObject.jar}" property="included.lib.reference.TransferObject.jar"/>
        <copy file="${reference.TransferObject.jar}" todir="${dist.ear.dir}"/>
        <basename file="${reference.ApplicationService.jar}" property="included.lib.reference.ApplicationService.jar"/>
        <copy file="${reference.ApplicationService.jar}" todir="${dist.ear.dir}"/>
        <basename file="${file.reference.commons-lang.jar}" property="included.lib.file.reference.commons-lang.jar"/>
        <copy file="${file.reference.commons-lang.jar}" todir="${dist.ear.dir}"/>
        <manifest file="${build.ear.classes.dir}/META-INF/MANIFEST.MF" mode="update">
            <attribute name="Class-Path" value="${included.lib.libs.spring-framework-2.5.classpath.1} ${included.lib.libs.spring-framework-2.5.classpath.2} ${included.lib.libs.spring-framework-2.5.classpath.3} ${included.lib.libs.spring-framework-2.5.classpath.4} ${included.lib.libs.spring-framework-2.5.classpath.5} ${included.lib.libs.spring-framework-2.5.classpath.6} ${included.lib.libs.spring-framework-2.5.classpath.7} ${included.lib.libs.spring-framework-2.5.classpath.8} ${included.lib.libs.spring-framework-2.5.classpath.9} ${included.lib.libs.spring-framework-2.5.classpath.10} ${included.lib.libs.spring-framework-2.5.classpath.11} ${included.lib.libs.spring-framework-2.5.classpath.12} ${included.lib.libs.spring-framework-2.5.classpath.13} ${included.lib.libs.spring-framework-2.5.classpath.14} ${included.lib.libs.spring-framework-2.5.classpath.15} ${included.lib.libs.spring-framework-2.5.classpath.16} ${included.lib.libs.spring-framework-2.5.classpath.17} ${included.lib.libs.spring-framework-2.5.classpath.18} ${included.lib.libs.spring-framework-2.5.classpath.19} ${included.lib.libs.spring-framework-2.5.classpath.20} ${included.lib.libs.spring-framework-2.5.classpath.21} ${included.lib.libs.spring-framework-2.5.classpath.22} ${included.lib.libs.spring-framework-2.5.classpath.23} ${included.lib.libs.spring-framework-2.5.classpath.24} ${included.lib.libs.spring-framework-2.5.classpath.25} ${included.lib.file.reference.xwork-2.1.1.jar} ${included.lib.file.reference.ognl-2.6.11.jar} ${included.lib.reference.TransferObject.jar} ${included.lib.reference.ApplicationService.jar} ${included.lib.file.reference.commons-lang.jar} "/>
        </manifest>
    </target>
    <target name="-copy-meta-inf">
        <copy todir="${classes.dir}">
            <fileset dir="${meta.inf}" includes="**/*.dbschema"/>
        </copy>
        <copy todir="${classes.dir}/META-INF">
            <fileset dir="${meta.inf}" excludes="**/*.dbschema **/xml-resources/** ${meta.inf.excludes}"/>
        </copy>
    </target>
    <target depends="init,deps-jar,-pre-pre-compile,-pre-compile,-copy-meta-inf" if="have.sources" name="-do-compile">
        <ejbjarproject2:javac destdir="${classes.dir}"/>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}" excludes="${build.classes.excludes}"/>
        </copy>
    </target>
    <target name="-post-compile">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,deps-jar,-pre-pre-compile,-pre-compile,-do-compile,-post-compile" description="Compile project." name="compile"/>
    <target name="-pre-compile-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,deps-jar,-pre-pre-compile" name="-do-compile-single">
        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
        <ejbjarproject2:javac>
            <customize>
                <include name="${javac.includes}"/>
            </customize>
        </ejbjarproject2:javac>
    </target>
    <target name="-post-compile-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,deps-jar,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single" name="compile-single"/>
    <!--
                DIST BUILDING SECTION
            -->
    <target name="-pre-dist">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,compile,-pre-dist,library-inclusion-in-archive" if="has.custom.manifest" name="-do-dist-with-manifest">
        <dirname file="${dist.jar}" property="dist.jar.dir"/>
        <mkdir dir="${dist.jar.dir}"/>
        <jar compress="${jar.compress}" jarfile="${dist.jar}" manifest="${build.classes.dir}/META-INF/MANIFEST.MF">
            <fileset dir="${build.classes.dir}"/>
        </jar>
    </target>
    <target depends="init,compile,-pre-dist,library-inclusion-in-archive" name="-do-dist-without-manifest" unless="has.custom.manifest">
        <dirname file="${dist.jar}" property="dist.jar.dir"/>
        <mkdir dir="${dist.jar.dir}"/>
        <jar compress="${jar.compress}" jarfile="${dist.jar}">
            <fileset dir="${build.classes.dir}"/>
        </jar>
    </target>
    <target depends="init,compile,-pre-dist,library-inclusion-in-archive, -do-dist-without-manifest, -do-dist-with-manifest" name="-do-dist"/>
    <target depends="init,compile,-pre-dist,library-inclusion-in-manifest" name="-do-ear-dist">
        <dirname file="${dist.ear.jar}" property="dist.jar.dir"/>
        <mkdir dir="${dist.jar.dir}"/>
        <jar compress="${jar.compress}" jarfile="${dist.ear.jar}" manifest="${build.ear.classes.dir}/META-INF/MANIFEST.MF">
            <fileset dir="${build.ear.classes.dir}"/>
        </jar>
    </target>
    <target name="-post-dist">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,compile,-pre-dist,-do-dist,-post-dist" description="Build distribution (JAR)." name="dist"/>
    <target depends="init,compile,-pre-dist,-do-ear-dist,-post-dist" description="Build distribution (JAR) to be packaged into an EAR." name="dist-ear"/>
    <!--
                EXECUTION SECTION
            -->
    <target depends="run-deploy" description="Deploy to server." name="run"/>
    <target name="-init-deploy">
        <property name="include.jar.manifest" value=""/>
    </target>
    <target name="pre-run-deploy">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="post-run-deploy">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-pre-nbmodule-run-deploy">
        <!-- Empty placeholder for easier customization. -->
        <!-- This target can be overriden by NetBeans modules. Don't override it directly, use -pre-run-deploy task instead. -->
    </target>
    <target name="-post-nbmodule-run-deploy">
        <!-- Empty placeholder for easier customization. -->
        <!-- This target can be overriden by NetBeans modules. Don't override it directly, use -post-run-deploy task instead. -->
    </target>
    <target name="-run-deploy-am">
        <!-- Task to deploy to the Access Manager runtime. -->
    </target>
    <target depends="init,-init-deploy,compile,library-inclusion-in-archive,dist,pre-run-deploy,-pre-nbmodule-run-deploy,-run-deploy-nb,-init-deploy-ant,-deploy-ant,-run-deploy-am,-post-nbmodule-run-deploy,post-run-deploy" name="run-deploy">
        <nbjpdaappreloaded/>
    </target>
    <target if="netbeans.home" name="-run-deploy-nb">
        <nbdeploy debugmode="false" forceRedeploy="${forceRedeploy}"/>
    </target>
    <target name="-init-deploy-ant" unless="netbeans.home">
        <property name="deploy.ant.archive" value="${dist.jar}"/>
        <property name="deploy.ant.resource.dir" value="${resource.dir}"/>
        <property name="deploy.ant.enabled" value="true"/>
    </target>
    <target depends="dist,-run-undeploy-nb,-init-deploy-ant,-undeploy-ant" name="run-undeploy"/>
    <target if="netbeans.home" name="-run-undeploy-nb">
        <fail message="Undeploy is not supported from within the IDE"/>
    </target>
    <target depends="dist" name="verify">
        <nbverify file="${dist.jar}"/>
    </target>
    <target depends="init,compile-single" name="run-main">
        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
        <ejbjarproject3:java classname="${run.class}"/>
    </target>
    <!--
                DEBUGGING SECTION
            -->
    <target depends="init,compile,dist" description="Debug project in IDE." if="netbeans.home" name="debug">
        <nbdeploy debugmode="true"/>
        <antcall target="connect-debugger"/>
    </target>
    <target name="connect-debugger" unless="is.debugged">
        <nbjpdaconnect address="${jpda.address}" host="${jpda.host}" name="${name}" transport="${jpda.transport}">
            <classpath>
                <path path="${debug.classpath}"/>
            </classpath>
            <sourcepath>
                <path path="${web.docbase.dir}"/>
            </sourcepath>
        </nbjpdaconnect>
    </target>
    <target depends="init" if="netbeans.home" name="-debug-start-debugger">
        <ejbjarproject1:nbjpdastart/>
    </target>
    <target depends="init,compile-single" if="netbeans.home" name="-debug-start-debuggee-single">
        <fail unless="main.class">Must select one file in the IDE or set main.class</fail>
        <ejbjarproject1:debug/>
    </target>
    <target depends="init,compile-single,-debug-start-debugger,-debug-start-debuggee-single" if="netbeans.home" name="debug-single-main"/>
    <target depends="init" name="-pre-debug-fix">
        <fail unless="fix.includes">Must set fix.includes</fail>
        <property name="javac.includes" value="${fix.includes}.java"/>
    </target>
    <target depends="init,-pre-debug-fix,compile-single" if="netbeans.home" name="-do-debug-fix">
        <ejbjarproject1:nbjpdareload/>
    </target>
    <target depends="init,-pre-debug-fix,-do-debug-fix" if="netbeans.home" name="debug-fix"/>
    <!--
                JAVADOC SECTION
            -->
    <target depends="init" name="javadoc-build">
        <mkdir dir="${dist.javadoc.dir}"/>
        <javadoc additionalparam="${javadoc.additionalparam}" author="${javadoc.author}" charset="UTF-8" destdir="${dist.javadoc.dir}" docencoding="UTF-8" encoding="${javadoc.encoding.used}" failonerror="true" noindex="${javadoc.noindex}" nonavbar="${javadoc.nonavbar}" notree="${javadoc.notree}" private="${javadoc.private}" source="${javac.source}" splitindex="${javadoc.splitindex}" use="${javadoc.use}" useexternalfile="true" version="${javadoc.version}" windowtitle="${javadoc.windowtitle}">
            <classpath>
                <path path="${javac.classpath}:${j2ee.platform.classpath}"/>
            </classpath>
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <packageset dir="${src.dir}" includes="*/**"/>
            <fileset dir="${src.dir}" includes="*.java"/>
        </javadoc>
    </target>
    <target depends="init,javadoc-build" if="netbeans.home" name="javadoc-browse" unless="no.javadoc.preview">
        <nbbrowse file="${dist.javadoc.dir}/index.html"/>
    </target>
    <target depends="init,javadoc-build,javadoc-browse" description="Build Javadoc." name="javadoc"/>
    <!--
                JUNIT COMPILATION SECTION
            -->
    <target depends="init,compile" if="have.tests" name="-pre-pre-compile-test">
        <mkdir dir="${build.test.classes.dir}"/>
    </target>
    <target name="-pre-compile-test">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test" if="have.tests" name="-do-compile-test">
        <ejbjarproject2:javac classpath="${javac.test.classpath}:${j2ee.platform.classpath}" debug="true" destdir="${build.test.classes.dir}" srcdir="${test.src.dir}"/>
        <copy todir="${build.test.classes.dir}">
            <fileset dir="${test.src.dir}" excludes="**/*.java"/>
        </copy>
    </target>
    <target name="-post-compile-test">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test" name="compile-test"/>
    <target name="-pre-compile-test-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single" if="have.tests" name="-do-compile-test-single">
        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
        <ejbjarproject2:javac classpath="${javac.test.classpath}:${j2ee.platform.classpath}" debug="true" destdir="${build.test.classes.dir}" srcdir="${test.src.dir}">
            <customize>
                <patternset includes="${javac.includes}"/>
            </customize>
        </ejbjarproject2:javac>
    </target>
    <target name="-post-compile-test-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single" name="compile-test-single"/>
    <!--
                JUNIT EXECUTION SECTION
            -->
    <target depends="init" if="have.tests" name="-pre-test-run">
        <mkdir dir="${build.test.results.dir}"/>
    </target>
    <target depends="init,compile-test,-pre-test-run" if="have.tests" name="-do-test-run">
        <ejbjarproject2:junit/>
    </target>
    <target depends="init,compile-test,-pre-test-run,-do-test-run" if="have.tests" name="-post-test-run">
        <fail if="tests.failed">Some tests failed; see details above.</fail>
    </target>
    <target depends="init" if="have.tests" name="test-report"/>
    <target depends="init" if="netbeans.home+have.tests" name="-test-browse"/>
    <target depends="init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse" description="Run unit tests." name="test"/>
    <target depends="init" if="have.tests" name="-pre-test-run-single">
        <mkdir dir="${build.test.results.dir}"/>
    </target>
    <target depends="init,compile-test-single,-pre-test-run-single" if="have.tests" name="-do-test-run-single">
        <fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>
        <ejbjarproject2:junit includes="${test.includes}"/>
    </target>
    <target depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single" if="have.tests" name="-post-test-run-single">
        <fail if="tests.failed">Some tests failed; see details above.</fail>
    </target>
    <target depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single" description="Run single unit test." name="test-single"/>
    <!--
                JUNIT DEBUGGING SECTION
            -->
    <target depends="init,compile-test" if="have.tests" name="-debug-start-debuggee-test">
        <fail unless="test.class">Must select one file in the IDE or set test.class</fail>
        <property location="${build.test.results.dir}/TEST-${test.class}.xml" name="test.report.file"/>
        <delete file="${test.report.file}"/>
        <!-- the directory must exist, otherwise the XML formatter would fail -->
        <mkdir dir="${build.test.results.dir}"/>
        <ejbjarproject1:debug args="${test.class}" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner" classpath="${ant.home}/lib/ant.jar:${ant.home}/lib/ant-junit.jar:${debug.test.classpath}">
            <customize>
                <arg value="showoutput=true"/>
                <arg value="formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter"/>
                <arg value="formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,${test.report.file}"/>
            </customize>
        </ejbjarproject1:debug>
    </target>
    <target depends="init,compile-test" if="netbeans.home+have.tests" name="-debug-start-debugger-test">
        <ejbjarproject1:nbjpdastart classpath="${debug.test.classpath}" name="${test.class}"/>
    </target>
    <target depends="init,compile-test,-debug-start-debugger-test,-debug-start-debuggee-test" name="debug-test"/>
    <target depends="init,-pre-debug-fix,compile-test-single" if="netbeans.home" name="-do-debug-fix-test">
        <ejbjarproject1:nbjpdareload dir="${build.test.classes.dir}"/>
    </target>
    <target depends="init,-pre-debug-fix,-do-debug-fix-test" if="netbeans.home" name="debug-fix-test"/>
    <!--
                CLEANUP SECTION
            -->
    <target depends="init" if="no.dist.ear.dir" name="deps-clean" unless="no.deps">
        <ant antfile="${project.ApplicationService}/build.xml" inheritall="false" target="clean"/>
        <ant antfile="${project.TransferObject}/build.xml" inheritall="false" target="clean"/>
    </target>
    <target depends="init" name="-do-clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>
    <target name="-post-clean">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target depends="init,deps-clean,-do-clean,-post-clean" description="Clean build products." name="clean"/>
    <target depends="clean" name="clean-ear"/>
</project>
